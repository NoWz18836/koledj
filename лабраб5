import sys
import requests
from bs4 import BeautifulSoup
from PyQt5.QtWidgets import (QApplication, QHBoxLayout, QWidget, QVBoxLayout,
                             QTableWidget, QTableWidgetItem, QPushButton,
                             QHeaderView, QMessageBox)
from PyQt5.QtCore import QTimer


class NewsScraper(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        # --- Widgets ---
        self.table = QTableWidget()
        self.load_button = QPushButton("Получить новости")
        self.clear_button = QPushButton("Очистить")

        # --- Connections ---
        self.load_button.clicked.connect(self.load_news)
        self.clear_button.clicked.connect(self.clear_table)

        # --- Table Settings ---
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["Новость", "Время"])
        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeToContents)
        self.table.verticalHeader().setVisible(False) # Hide row numbers

        # --- Layout ---
        button_layout = QVBoxLayout()
        button_layout.addWidget(self.load_button)
        button_layout.addWidget(self.clear_button)
        button_layout.addStretch()

        main_layout = QHBoxLayout()
        main_layout.addWidget(self.table)
        main_layout.addLayout(button_layout)

        self.setLayout(main_layout)
        self.setWindowTitle("Скрепер новостей РИА")

        self.show()

    def load_news(self):
        try:
            url = 'https://ria.ru/'
            r = requests.get(url, timeout=10)  # Add timeout to avoid indefinite hanging
            r.raise_for_status() # Raise HTTPError for bad responses (4xx or 5xx)
            soup = BeautifulSoup(r.text, 'html.parser')

            # --- Main News ---
            main_news = soup.find_all('div', class_='cell-main-photo__title')
            main_time = soup.find_all('div', class_='cell-main-photo__info')

            # --- Other News ---
            other_news = soup.find_all('span', class_='cell-list__item-title')
            other_time = soup.find_all('div', class_='cell-list__item-info')

            all_news = [] #Combine the news in the table
            for i in range(len(main_news)):
                 all_news.append((main_news[i].text.strip(), main_time[i].text.strip()))

            for i in range(len(other_news)):
                 all_news.append((other_news[i].text.strip(), other_time[i].text.strip()))

            self.clear_table()
            self.table.setRowCount(len(all_news))

            for row_index, (news_text, time_text) in enumerate(all_news):
                self.table.setItem(row_index, 0, QTableWidgetItem(news_text))
                self.table.setItem(row_index, 1, QTableWidgetItem(time_text))

        except requests.exceptions.RequestException as e:
            QMessageBox.critical(self, "Ошибка", f"Ошибка при запросе данных: {e}")
            print(f"Request Error: {e}")
        except Exception as e:
            QMessageBox.critical(self, "Ошибка", f"Произошла непредвиденная ошибка: {e}")
            print(f"An unexpected error occurred: {e}")

    def clear_table(self):
        self.table.setRowCount(0) # Efficiently clear the table

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = NewsScraper()
    sys.exit(app.exec_())
