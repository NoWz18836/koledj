import tkinter as tk

class CalculatorApp(tk.Tk):
    def __init__(self):
        super().__init__()
        
        self.title("Калькулятор")
        self.geometry("300x400")
        self.resizable(False, False)
        
        self.expression = ""
        self.total_expression = ""
        
        self.display_frame = tk.Frame(self)
        self.display_frame.pack(expand=True, fill="both")
        
        self.text_input = tk.StringVar()
        self.text_input.set("0")
        
        self.lbl_display = tk.Label(
            self.display_frame,
            textvariable=self.text_input,
            anchor=tk.E,
            bg="#F5F5F5",
            font=("Arial", 20),
            height=2
        )
        self.lbl_display.pack(expand=True, fill="both")
        
        self.btns_frame = tk.Frame(self)
        self.btns_frame.pack(expand=True, fill="both")
        
        self.btn_clear = tk.Button(
            self.btns_frame,
            text="C",
            command=lambda: self.clear(),
            width=10,
            height=3
        )
        self.btn_clear.grid(row=0, column=0, columnspan=3, sticky=tk.NSEW)
        
        self.btn_divide = tk.Button(
            self.btns_frame,
            text="/",
            command=lambda: self.append_to_expression("/"),
            width=10,
            height=3
        )
        self.btn_divide.grid(row=0, column=3, sticky=tk.NSEW)
        
        self.btn_seven = tk.Button(
            self.btns_frame,
            text="7",
            command=lambda: self.append_to_expression("7"),
            width=10,
            height=3
        )
        self.btn_seven.grid(row=1, column=0, sticky=tk.NSEW)
        
        self.btn_eight = tk.Button(
            self.btns_frame,
            text="8",
            command=lambda: self.append_to_expression("8"),
            width=10,
            height=3
        )
        self.btn_eight.grid(row=1, column=1, sticky=tk.NSEW)
        
        self.btn_nine = tk.Button(
            self.btns_frame,
            text="9",
            command=lambda: self.append_to_expression("9"),
            width=10,
            height=3
        )
        self.btn_nine.grid(row=1, column=2, sticky=tk.NSEW)
        
        self.btn_multiply = tk.Button(
            self.btns_frame,
            text="*",
            command=lambda: self.append_to_expression("*"),
            width=10,
            height=3
        )
        self.btn_multiply.grid(row=1, column=3, sticky=tk.NSEW)
        
        self.btn_four = tk.Button(
            self.btns_frame,
            text="4",
            command=lambda: self.append_to_expression("4"),
            width=10,
            height=3
        )
        self.btn_four.grid(row=2, column=0, sticky=tk.NSEW)
        
        self.btn_five = tk.Button(
            self.btns_frame,
            text="5",
            command=lambda: self.append_to_expression("5"),
            width=10,
            height=3
        )
        self.btn_five.grid(row=2, column=1, sticky=tk.NSEW)
        
        self.btn_six = tk.Button(
            self.btns_frame,
            text="6",
            command=lambda: self.append_to_expression("6"),
            width=10,
            height=3
        )
        self.btn_six.grid(row=2, column=2, sticky=tk.NSEW)
        
        self.btn_subtract = tk.Button(
            self.btns_frame,
            text="-",
            command=lambda: self.append_to_expression("-"),
            width=10,
            height=3
        )
        self.btn_subtract.grid(row=2, column=3, sticky=tk.NSEW)
        
        self.btn_one = tk.Button(
            self.btns_frame,
            text="1",
            command=lambda: self.append_to_expression("1"),
            width=10,
            height=3
        )
        self.btn_one.grid(row=3, column=0, sticky=tk.NSEW)
        
        self.btn_two = tk.Button(
            self.btns_frame,
            text="2",
            command=lambda: self.append_to_expression("2"),
            width=10,
            height=3
        )
        self.btn_two.grid(row=3, column=1, sticky=tk.NSEW)
        
        self.btn_three = tk.Button(
            self.btns_frame,
            text="3",
            command=lambda: self.append_to_expression("3"),
            width=10,
            height=3
        )
        self.btn_three.grid(row=3, column=2, sticky=tk.NSEW)
        
        self.btn_add = tk.Button(
            self.btns_frame,
            text="+",
            command=lambda: self.append_to_expression("+"),
            width=10,
            height=3
        )
        self.btn_add.grid(row=3, column=3, sticky=tk.NSEW)
        
        self.btn_zero = tk.Button(
            self.btns_frame,
            text="0",
            command=lambda: self.append_to_expression("0"),
            width=21,
            height=3
        )
        self.btn_zero.grid(row=4, column=0, columnspan=2, sticky=tk.NSEW)
        
        self.btn_dot = tk.Button(
            self.btns_frame,
            text=".",
            command=lambda: self.append_to_expression("."),
            width=10,
            height=3
        )
        self.btn_dot.grid(row=4, column=2, sticky=tk.NSEW)
        
        self.btn_equals = tk.Button(
            self.btns_frame,
            text="=",
            command=lambda: self.calculate_total(),
            width=10,
            height=3
        )
        self.btn_equals.grid(row=4, column=3, sticky=tk.NSEW)
        
    def append_to_expression(self, value):
        self.expression += str(value)
        self.text_input.set(self.expression)
        
    def clear(self):
        self.expression = ""
        self.total_expression = ""
        self.text_input.set("0")
        
    def calculate_total(self):
        try:
            self.total_expression = str(eval(self.expression))
            self.text_input.set(self.total_expression)
            self.expression = ""
        except Exception as e:
            self.text_input.set("Ошибка")
            self.expression = ""

if __name__ == "__main__":
    app = CalculatorApp()
    app.mainloop()
